var H=Object.defineProperty;var O=s=>{throw TypeError(s)};var P=(s,e,t)=>e in s?H(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var r=(s,e,t)=>P(s,typeof e!="symbol"?e+"":e,t),Q=(s,e,t)=>e.has(s)||O("Cannot "+t);var o=(s,e,t)=>(Q(s,e,"read from private field"),t?t.call(s):e.get(s)),i=(s,e,t)=>e.has(s)?O("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(s):e.set(s,t);import{aq as c,i as h,a7 as d}from"./S3wTCJs2.js";import{p as a}from"./CXT5jp70.js";var g,u;class ${constructor(){i(this,g,c(a([])));i(this,u,c(null));r(this,"lastTimestamp",0)}get gamepads(){return h(o(this,g))}set gamepads(e){d(o(this,g),a(e))}get current(){return h(o(this,u))}set current(e){d(o(this,u),a(e))}updateGamepads(){this.gamepads=navigator.getGamepads?Array.from(navigator.getGamepads()).filter(e=>e):[],this.gamepads.length?(this.current=this.gamepads[0],this.lastTimestamp<this.current.timestamp&&(console.log("Update: ",this.current),this.lastTimestamp=this.current.timestamp)):this.current=null}getPS4ButtonLabel(e){return{0:"✕",1:"◯",2:"◻",3:"△",4:"L1",5:"R1",6:"L2",7:"R2",8:"Share",9:"Options",10:"L3",11:"R3",12:"D-Pad Up",13:"D-Pad Down",14:"D-Pad Left",15:"D-Pad Right",16:"PS",17:"Touchpad"}[e]||`B${e}`}}g=new WeakMap,u=new WeakMap;class W{constructor(){r(this,"socket",null);r(this,"url",`ws://${window.location.hostname}:8002`);r(this,"isConnected",!1);r(this,"messageHandlers",{});r(this,"reconnectInterval",3e3);r(this,"messageQueue",[]);this.messageQueue=[],this.messageHandlers={}}init(){return new Promise((e,t)=>{this.socket||(this.socket=new WebSocket(this.url),this.socket.onopen=()=>{this.isConnected=!0,console.log("Connected to WebSocket."),e(),this.flushQueue()},this.socket.onmessage=n=>{const S=n.data.split(".");if(S.length<2)return;const b=S.shift();b!="time"&&console.log({type:b,data:S}),this.handleMessage(b,S)},this.socket.onerror=n=>{console.error("WebSocket error:",n),t(n)},this.socket.onclose=()=>{this.isConnected=!1,console.log("WebSocket closed. Attempting to reconnect..."),setTimeout(()=>this.reconnect(),this.reconnectInterval)})})}reconnect(){this.isConnected||(console.log("Reconnecting..."),this.init())}sendMessage(e,t=[]){const n=t.length?`${e}.${t.join(".")}`:e;this.socket&&this.socket.readyState===WebSocket.OPEN?this.socket.send(n):(console.warn("WebSocket not open. Queuing message."),this.messageQueue.push(n))}flushQueue(){var e;for(;this.messageQueue.length>0&&((e=this.socket)==null?void 0:e.readyState)===WebSocket.OPEN;)this.socket.send(this.messageQueue.shift())}handleMessage(e,t){const n=this.messageHandlers[e];n?n(t):console.warn(`No handler for message type: ${e}`)}addMessageHandler(e,t){this.messageHandlers[e]=t}removeMessageHandler(e){delete this.messageHandlers[e]}}var m,p,f,M;class v{constructor(){i(this,m,c(""));i(this,p,c(a([])));i(this,f,c("$Stop$Robot$"));i(this,M,c("stopped"))}get time(){return h(o(this,m))}set time(e){d(o(this,m),a(e))}get opModes(){return h(o(this,p))}set opModes(e){d(o(this,p),a(e))}get currentOpMode(){return h(o(this,f))}set currentOpMode(e){d(o(this,f),a(e))}get currentOpModeStatus(){return h(o(this,M))}set currentOpModeStatus(e){d(o(this,M),a(e))}}m=new WeakMap,p=new WeakMap,f=new WeakMap,M=new WeakMap;var k;class D{constructor(){i(this,k,c(a([])))}get data(){return h(o(this,k))}set data(e){d(o(this,k),a(e))}add(e){this.data.push({timestamp:Date.now(),text:e})}}k=new WeakMap;const l=new W;l.addMessageHandler("time",s=>{w.time=s[0]});l.addMessageHandler("opmodes",s=>{var e=[];for(let t=0;t<s.length;t+=3)t+2<s.length&&e.push({name:s[t],group:s[t+1],flavor:s[t+2]});w.opModes=e});l.addMessageHandler("current_opmode",s=>{w.currentOpMode=s[0],w.currentOpModeStatus=s[1]});const w=new v;setTimeout(()=>{l.sendMessage("get_opmodes"),l.sendMessage("get_current_opmode")},1e3);const L=new $,y=new D;export{L as g,w as i,y as n,l as s};
