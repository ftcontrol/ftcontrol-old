import com.android.tools.r8.D8

plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
}

android {
    namespace 'com.bylazar.mylibrary'

    compileSdkVersion 35

    defaultConfig {
        minSdk 24
    }


    buildTypes {
        release {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {
    implementation project(':ftcontrol')
}

tasks.register('generateLibraryDex', JavaExec) {
    dependsOn(":MyLibrary:build")

    def outputDir = file("${rootProject.projectDir}/TeamCode/src/main/assets/plugins/")
    def inputJar = file("$outputDir/my-library-release.jar")
    def generatedDex = file("$outputDir/classes.dex")
    def renamedDex = file("$outputDir/my-library.dex")

    inputs.files(zipTree("${layout.buildDirectory.get()}/outputs/aar/MyLibrary-release.aar"))
    outputs.file(renamedDex)

    doFirst {
        outputDir.mkdirs()
        if (inputJar.exists()) inputJar.delete()
        if (generatedDex.exists()) generatedDex.delete()
        if (renamedDex.exists()) renamedDex.delete()

        copy {
            from zipTree("${layout.buildDirectory.get()}/outputs/aar/MyLibrary-release.aar")
            include "classes.jar"
            into outputDir
            rename { "my-library-release.jar" }
        }
    }

    mainClass.set("com.android.tools.r8.D8")
    classpath = files("${android.sdkDirectory}/build-tools/${android.buildToolsVersion}/lib/d8.jar")

    args = [
            "--release",
            "--output", outputDir.absolutePath,
            inputJar.absolutePath
    ]

    doLast {
        if (generatedDex.exists()) {
            generatedDex.renameTo(renamedDex)
            println "Renamed classes.dex to my-library.dex"
        } else {
            throw new GradleException("DEX file not found after D8 execution!")
        }

        if (inputJar.exists()) {
//            inputJar.delete()
            println "Deleted original JAR file"
        }
    }
}